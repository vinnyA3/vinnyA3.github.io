{"version":3,"sources":["webpack:///./src/utils/helpers.js","webpack:///./src/components/window/index.js","webpack:///./src/background-color-generator.js","webpack:///./src/pages/index.js"],"names":["typeFn","Window","className","href","target","isType","type","val","isNum","areAllNums","arr","every","bgColorGenerator","targetEl","startRGB","element","nodeType","Array","isArray","R","G","B","rgbMap","style","backgroundColor","currRGB","incDec","counter","bgInterval","setInterval","currVal","rgb","num","updateRGBVal","stop","clearInterval","console","error","IndexPage","useEffect","generator","document","body","height","width","display","justifyContent","alignItems","title"],"mappings":"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","file":"component---src-pages-index-js-b65bb58a9eb566580d0c.js","sourcesContent":["// compose :: Fn -> Fn -> a\nexport const compose = (f, g) => x => f(g(x));\n\n// isType :: String -> a -> Bool\nexport const isType = type => val => typeof val === type;\n\n// isString :: a -> Bool\nexport const isString = isType('string');\n\n// isNum :: a -> Bool\nexport const isNum = isType('number');\n\n// isArray -> a -> Bool\nexport const isArray = val => Array.isArray(val);\n\n// isDOMElement -> DOMElement -> Bool\nexport const isDOMElement = element => element?.nodeType === 1\n\n// allOfType -> Fn -> Array[x] -> Bool\nexport const allOfType = typeFn => arr => arr.every(typeFn);\n\nexport const rand = (min, max) =>\n  Math.floor(Math.random() * (max - min + 1) + min);\n","import React from \"react\"\n\nimport \"./styles.scss\"\n\nconst Window = () => {\n  return (\n    <div className=\"code\">\n      <div className=\"code__lines\">\n        <div className=\"code__line-number\">\n          <span>1</span>\n        </div>\n        <div className=\"code__line-number\">\n          <span>2</span>\n        </div>\n        <div className=\"code__line-number\">\n          <span>3</span>\n        </div>\n        <div className=\"code__line-number\">\n          <span>4</span>\n        </div>\n        <div className=\"code__line-number\">\n          <span>5</span>\n        </div>\n        <div className=\"code__line-number\">\n          <span>6</span>\n        </div>\n        <div className=\"code__line-number\">\n          <span>7</span>\n        </div>\n        <div className=\"code__line-number\">\n          <span>8</span>\n        </div>\n        <div className=\"code__line-number\">\n          <span>9</span>\n        </div>\n        <div className=\"code__line-number\">\n          <span>10</span>\n        </div>\n      </div>\n      <code>\n        <div>\n          <span className=\"code__keyword\">const</span>\n          <span className=\"code__variable\"> aboutMe</span> <span> = {\"{\"}</span>\n        </div>\n        <div>\n          <span className=\"code__prop\">name</span>:\n          <span className=\"code__string\"> 'Vincent Aceto'</span>,\n        </div>\n        <div>\n          <span className=\"code__prop\">occupation</span>:\n          <span className=\"code__string\"> 'Software Engineer'</span>,\n        </div>\n        <div>\n          <span className=\"code__prop\">employer</span>:\n          <span className=\"code__string\"> 'Major League Soccer'</span>,\n        </div>\n        <div>\n          <span className=\"code__prop\">location</span>:\n          <span className=\"code__string\"> 'New York, NY'</span>,\n        </div>\n        <div>\n          <span className=\"code__prop\">contact</span>\n          <span>: {\"{\"}</span>\n        </div>\n        <div>\n          <span className=\"code__prop code__prop--indent2\">email</span>:&nbsp;\n          <span className=\"code__string\">\n            <a className=\"code__link\" href=\"mailto:vincent.aceto@gmail.com\">\n              'vincent.aceto@gmail.com'\n            </a>\n          </span>\n          ,\n        </div>\n        <div>\n          <span className=\"code__prop code__prop--indent2\">socials</span>: [&nbsp;\n          <span className=\"code__string\">\n            <a\n              className=\"code__link\"\n              href=\"https://github.com/vinnyA3\"\n              target=\"_blank\"\n            >\n              'github'\n            </a>\n          </span>\n          ,\n          <span className=\"code__string\">\n            <a\n              className=\"code__link\"\n              href=\"https://codepen.io/vinnyA3\"\n              target=\"_blank\"\n            >\n              'codepen'\n            </a>\n          </span>\n          ,\n          <span className=\"code__string\">\n            <a\n              className=\"code__link\"\n              href=\"https://linkedin.com/in/vinaceto\"\n              target=\"_blank\"\n            >\n              'linkedin'\n            </a>\n          </span>\n          &nbsp;]\n        </div>\n        <div>\n          <span className=\"code__indent\">{\"}\"}</span>\n        </div>\n        <span>{\"}\"}</span>\n      </code>\n    </div>\n  )\n}\n\nexport default Window\n","// Created by Vincent Aceto (vinnya3)\n// Licensed under MIT\n\nimport { isNum, isDOMElement, isArray, allOfType } from \"./utils/helpers\"\n\nconst areAllNums = allOfType(isNum)\n\nconst nextRGB = rgb =>\n  ({\n    R: \"G\",\n    B: \"R\",\n    G: \"B\",\n  }[rgb])\n\n/**\n * bgColorGenerator (curried) - sorry LOL\n *\n * @param {DOM Element} targetEl - DOM element whose background will be changing\n * @return {Function}\n *   @param {Array[Number]} startRGB - Array of RGB start values\n *\n * @example\n *\n *     bgColorGenerator('main')([193, 88, 88]);\n */\n\nconst bgColorGenerator = targetEl => startRGB => {\n  if (!isDOMElement(targetEl) || !isArray(startRGB)) {\n    return (\n      console.error(\n        'Argument(1) must be of type: \"DOM Element\".  Argument(2) must be of type: Array[Number]'\n      ),\n      void 0\n    )\n  } else if (!areAllNums(startRGB)) {\n    return console.error(\"Argument(2) must be composed of type: Number\"), void 0\n  }\n\n  const target = targetEl\n  const [R, G, B] = startRGB\n  const rgbMap = { R, G, B }\n\n  target.style.backgroundColor = `rgb(${R},${G},${B})`\n\n  const updateRGBVal = rgb =>\n    ({\n      R: num =>\n        (target.style.backgroundColor = `rgb(${num},${rgbMap.G},${rgbMap.B})`),\n      G: num =>\n        (target.style.backgroundColor = `rgb(${rgbMap.R},${num},${rgbMap.B})`),\n      B: num =>\n        (target.style.backgroundColor = `rgb(${rgbMap.R},${rgbMap.G},${num})`),\n    }[rgb])\n\n  let currRGB = \"B\"\n  let incDec = \"inc\"\n  let counter = 0\n\n  const bgInterval = setInterval(() => {\n    let currVal = rgbMap[currRGB]\n    if (counter === 105) {\n      counter = 0\n      currRGB = nextRGB(currRGB)\n      incDec = currVal === 88 ? \"inc\" : \"dec\"\n    }\n\n    counter++\n    updateRGBVal(currRGB)(\n      incDec === \"inc\" ? rgbMap[currRGB]++ : rgbMap[currRGB]--\n    )\n  }, 200)\n\n  return {\n    stop: () => clearInterval(bgInterval),\n  }\n}\n\nexport default bgColorGenerator\n","import React, { useEffect } from \"react\"\nimport SEO from \"../components/seo\"\nimport Window from '../components/window'\nimport bgColorGenerator from \"../background-color-generator\"\n\nconst IndexPage = () => {\n  useEffect(() => {\n    const generator = bgColorGenerator(document.body)([193, 88, 88])\n\n    return () => {\n      generator.stop()\n    }\n  }, [])\n\n  return (\n    <div\n      style={{\n        height: \"100vh\",\n        width: \"100vw\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n      }}\n    >\n      <SEO title=\"Home\" />\n      <Window />\n    </div>\n  )\n}\n\nexport default IndexPage\n"],"sourceRoot":""}